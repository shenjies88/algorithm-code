#include <iostream>
#include <queue>
#include <functional>
using namespace std;


typedef struct  node
{
	int x;
	int y;
	friend bool operator< (node n1,node n2)
	{
		return n1.y>n2.y;
	}
}Node;//自定义结构体出队优先级

void main()
{
	priority_queue<Node> q;
	priority_queue<int> q1;
	priority_queue<int,vector<int>,greater<int> >q2;//升序出队
	//priority_queue<int,vector<int>,less<int> >q2; 降序出队
	Node a[5]={{5,5},{5,4},{5,3},{5,2},{5,1}};
	int b[5]={2,5,4,3,1};

	for (int i=0;i<5;i++)
	{
		q.push(a[i]);
	}
	while(!q.empty())
	{
		cout<<q.top().y<<" "<<q.top().x<<" ";
		q.pop();
	}

	cout<<endl;

	for (i=0;i<5;i++)
	{
		q1.push(b[i]);
	}
	while(!q1.empty())
	{
		cout<<q1.top()<<" ";
		q1.pop();
	}

	cout<<endl;

	for (i=0;i<5;i++)
	{
		q2.push(b[i]);
	}
	while(!q2.empty())
	{
		cout<<q2.top()<<" ";
		q2.pop();
	}
}
