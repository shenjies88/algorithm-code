#include <stdio.h>
#include <stdlib.h>
#define N 7
int **m;
int **s;
int DP(int *p,int i,int j)
{
	if(m[i][j]!=99999)
	{
		return m[i][j];
	}

	if (i==j)
	{
		return 0;
	}
	m[i][j]=99999;
	for (int k=i;k<j;k++)
	{
		int q=DP(p,i,k)+DP(p,k+1,j)+p[i-1]*p[k]*p[j];
		if (q<m[i][j])
		{
			m[i][j]=q;
			s[i][j]=k;
		}
	}
	return m[i][j];
}


void Patition(int i,int j)
{
	if (i==j)
	{
		printf("A%d",i);
	}
	else
	{
		printf("(");
		Patition(i,s[i][j]);
		Patition(s[i][j]+1,j);
		printf(")");
	}
}
	
	

void main()
{
	int p[]={5,10,3,12,5,50,6};
	int i,n;
	n=N-1;
	m=(int**)malloc(N*sizeof(int*));
	s=(int**)malloc(N*sizeof(int*));	
	for (i=0;i<=n;i++)m[i]=(int*)malloc(N*sizeof(int));
	for (i=0;i<=n;i++)s[i]=(int*)malloc(N*sizeof(int));	
	for(i=0;i<=n;i++)m[i][i]=0;

	DP(p,1,6);
	Patition(1,6);

}